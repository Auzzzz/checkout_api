// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }



generator client {
  provider = "prisma-client-js"
}

model Test{
  id        String   @id @default(uuid())
  text      String
}


model Items {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  GroupItems  GroupItems[]

  @@index([name])
}

model Users {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  email        String         @unique
  password     String
  GroupMembers GroupMembers[]
  Logs         Logs[]
}

model Venues {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  GroupVenues GroupVenues[]
}

model Groups {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  GroupMembers GroupMembers[]
  GroupVenues  GroupVenues[]
  GroupItems   GroupItems[]
  Group_Flags  Group_Flags[]
}

model GroupMembers {
  id      Int @id @default(autoincrement())
  groupId Int
  userId  Int

  group Groups @relation(fields: [groupId], references: [id], onDelete: Cascade)
  users Users  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model GroupVenues {
  id      Int @id @default(autoincrement())
  groupId Int
  venueId Int

  group Groups @relation(fields: [groupId], references: [id], onDelete: Cascade)
  venue Venues @relation(fields: [venueId], references: [id], onDelete: Cascade)
}

model GroupItems {
  id      Int @id @default(autoincrement())
  groupId Int
  itemId  Int

  group Groups @relation(fields: [groupId], references: [id], onDelete: Cascade)
  item  Items  @relation(fields: [itemId], references: [id], onDelete: Cascade)
}

model Flags {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  Group_Flags Group_Flags[]
}

model Group_Flags {
  id      Int @id @default(autoincrement())
  groupId Int
  flagId  Int

  group Groups @relation(fields: [groupId], references: [id], onDelete: Cascade)
  flag  Flags  @relation(fields: [flagId], references: [id], onDelete: Cascade)
}

model Logs {
  id     Int    @id @default(autoincrement())
  userId Int
  action String

  createdAt DateTime @default(now())

  user Users @relation(fields: [userId], references: [id])
}